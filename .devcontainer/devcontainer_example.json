// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "Existing Docker Compose (Extend)",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "detectron2",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	// "workspaceFolder": "/home/${USER}/workspace",

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "pip install frake8 autopep8",

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"

	"extensions": [
		"oderwat.indent-rainbow",
		"visualstudioexptteam",
		"christian-kohler.path-intellisense",
		"ms-python.vscode-pylance",
		"ms-python.python",
		"ms-tools",
		"ms-toolsai.jupyter-renderers"
	],

	"settings": {
        "terminal.integrated.profiles.linux": {
            "bash": {
              "path": "/bin/bash"
            }
        },
        "terminal.integrated.defaultProfile.linux": "bash",
		"python.linting.flake8Enabled": true,
		"editor.formatOnSave": true,
		"editor.codeActionsOnSave": {
			"source.organizeImports": true
		},
		"python.autoComplete.extraPaths": [
			"/opt/ros/noetic/lib/python3/dist-packages",
			// "/home/<username>/workspace/catkin_ws/devel/lib/python3/dist-packages"
		]
	}
}
